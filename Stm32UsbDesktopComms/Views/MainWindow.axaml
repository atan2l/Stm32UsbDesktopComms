<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Stm32UsbDesktopComms.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Stm32UsbDesktopComms.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Stm32UsbDesktopComms">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid RowDefinitions="Auto, 20, 100, 20, *" HorizontalAlignment="Center" MinWidth="400">
        <StackPanel Grid.Row="0">
            <ComboBox ItemsSource="{Binding UsbDevices}" SelectedItem="{Binding SelectedUsbDevice}"
                      HorizontalAlignment="Stretch" />
            <Grid ColumnDefinitions="*, *">
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Content="Select" Command="{Binding SelectUsbDeviceCommand}" />
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" Spacing="5">
                    <Button Content="LED On" Command="{Binding ControlLedCommand}" CommandParameter="{x:True}" />
                    <Button Content="LED Off" Command="{Binding ControlLedCommand}" CommandParameter="{x:False}" />
                </StackPanel>
            </Grid>
        </StackPanel>

        <Grid Grid.Row="2" RowDefinitions="*, Auto">
            <TextBox Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Stretch" AcceptsReturn="True"
                     Text="{Binding DeviceMessage}" />
            <Button Grid.Row="1" Content="Send" Command="{Binding SendMessageCommand}" />
        </Grid>

        <TextBox Grid.Row="4" AcceptsReturn="True" TextWrapping="Wrap" VerticalAlignment="Stretch"
                 Text="{Binding DeviceResponse}" IsReadOnly="True" />
    </Grid>

</Window>